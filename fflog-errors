#!/usr/bin/perl
# Attribute ffmpeg errors and warnings to .ts segments that triggered them.
# Edits the log inplace, transforming it into "<segments.ts> <warning>" lines.
# Also prints the total stream duration to stdout.
use v5.12;
my ($part, @w, $time);
sub flush ($) {
    my $n = shift or return;
    for (@w) {
	next if /^\[AVIOContext.* Statistics:/;
	next if /^\[h264.* Reinit context/;
	next if /^\[graph .* from stream/;
	if ($n < 4) {
	    next if /^Input (?:file )?#/;
	    next if /^Output (?:file )?#/;
	    next if /^Stream mapping/;
	    next if /^Press\s/;
	    next if /^\s/;
	}
	if ($n == -1) {
	    $time = $2,
	    next if /^(frame|size)=.* time=(\S+)/;
	    next if /^video:.* audio:/;
	    next if /No more output streams/;
	}
	s/ @ 0x[0-9a-f]+\]/]/;
	s/\b(pts|dts|size)=\d+\b/$1=42/g;
	s/\b(dts to muxer in stream \d): \d+ >= \d+/$1/;
	say "$part\t$_";
    }
}
{
    my $n;
    local $^I = "";
    while (<>) {
	chomp;
	if (/^\[.*Opening '([^']+)' for reading/ or
	    /^\[.*DASH request for url '([^']+)'/)
	{
	    flush $n++;
	    $part = $1;
	    $part =~ s#.*/##;
	    undef @w;
	}
	elsif ($part and /\w/) {
	    push @w, $_;
	}
	flush -1 if eof;
    }
    die "no parts" unless $n;
    die "no time" unless $time;
    say $time;
}
