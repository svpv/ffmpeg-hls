#!/bin/bash -efux

wGet()
{
	wopt='-nv --timeout 30 --tries 10 --retry-connrefused'
	if !	wget $wopt "$@"; then
		if [ -n "${http_proxy-}" ]; then
			update-uk-proxy
			. uk_proxy.sh
		fi
		wget $wopt "$@"
	fi
}

remove_tmpdir()
{
	if [ -n "${FFMPEG_HLS_KEEP_TMPDIR-}" ]; then
		echo >&2 "tmpdir=$tmpdir"
	else
		rm -r "$tmpdir"
	fi
	exit $1
}

DoubleCheck()
{
	local url="$1"; shift
	set -- "$1" $tmpdir/out{1,2}
	wGet -O "$2" "$url"
	if cmp -s "$1" "$2"; then
		rm "$2"
	else
		wGet -O "$3" "$url"
		if cmp -s "$1" "$3"; then
			rm "$2" "$3"
		elif cmp -s "$2" "$3"; then
			mv "$2" "$1"
			rm "$3"
		else
			rm "$1" "$2" "$3"
			false
		fi
	fi
}

tmpdir=
hlsdirs=()
argv=("$@")

for (( i = 1; i < $#; i++ )); do
	[[ ${argv[i-1]} = -i && ${argv[i]} = http://* ]] || continue
	if [ -z "$tmpdir" ]; then
		trap 'exit 143' HUP INT QUIT PIPE TERM
		tmpdir=$(mktemp -dt "${0##*/}.XXXXXXXX")
		trap 'remove_tmpdir $?' EXIT
	fi
	url=${argv[i]}
	out=$tmpdir/hls$i
	wGet -O "$out" "$url"
	argv[i]=$out
	if [ "$(head -c7 "$out")" = '#EXTM3U' ]; then
		DoubleCheck "$url" "$out"
		dir=$(sha1sum <"$out")
		dir=${TMPDIR:-/tmp}/hls-${dir:0:20}
		mkdir -pv "$dir"
		hlsdirs+=("$dir")
		pushd "$dir"
		perl -lne '
			use v5.12;
			our $base;
			BEGIN {
				$base = shift;
			}
			s/\r//g;
			if (m,^http://,) {
				say;
			}
			elsif (m,^[^#],) {
				say "$base/$_";
			}
			' "${url%/*}" <"$out" >$tmpdir/parts$i
		perl -pe 's,^http://.*/,,' "$out" >new.m3u
		wGet --continue --input-file=$tmpdir/parts$i
		argv[i]=$PWD/new.m3u
		popd
	fi
	if ffmpeg -v error -i "${argv[i]}" -f null - 2>&1 |
	   grep -v 'non-existing SPS 0 referenced in buffering period
Application provided invalid, non.monotonically increasing dts to muxer
Last message repeated'; then
		: need recheck
	else
		continue
	fi
	if [ "$(head -c7 "$out")" = '#EXTM3U' ]; then
		while read -r part; do
			b=${part##*/}
			f=$dir/$b
			[ -f "$f" ]
			ffmpeg -v error -i "$f" -f null - 2>&1 </dev/null |
				awk -v part="$part" '{print part"\t"$0}'
		done <$tmpdir/parts$i |
			perl -pe 's/ @ 0x[0-9a-f]+\]/]/' |
			sort -t$'\t' -u -k2,2 -k1,1 >$tmpdir/parts$i.all-errors
		n=$(wc -l <$tmpdir/parts$i)
		cut -f2 $tmpdir/parts$i.all-errors |uniq -c |
			awk -v n="$n" '($1<n/2){sub(" +[0-9]+ ","");print}' |
			sort -u >$tmpdir/parts$i.real-errors
		join -t$'\t' -12 -21 -o 1.1 $tmpdir/parts$i.{all,real}-errors >$tmpdir/parts$i.ck
		sort -u -o $tmpdir/parts$i.ck{,}
		while read -r part; do
			b=${part##*/}
			f=$dir/$b
			[ -f "$f" ]
			DoubleCheck "$part" "$f" </dev/null
		done <$tmpdir/parts$i.ck
	else
		DoubleCheck "$url" "$out"
	fi
done

if [ "$*" = "${argv[*]-}" ]; then
	exec ffmpeg "$@"
fi

rc=
ffmpeg "${argv[@]}" || rc=$?

[ -n "$rc" ] ||
rm -r "${hlsdirs[@]}"

exit $rc
