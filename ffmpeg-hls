#!/bin/bash -efux

wGet()
{
	wopt='-nv --timeout 30 --tries 10 --retry-connrefused --unlink'
	if !	wget $wopt "$@"; then
		if [ -n "${http_proxy-}" ]; then
			update-uk-proxy
			. uk_proxy.sh
		fi
		wget $wopt "$@"
	fi
}

remove_tmpdir()
{
	if [ -n "${FFMPEG_HLS_KEEP_TMPDIR-}" ]; then
		echo >&2 "tmpdir=$tmpdir"
	else
		rm -r "$tmpdir"
	fi
	exit $1
}

Ck1()
{
	local url="$1"; shift
	wGet -O "$2" "$url"
	if cmp -s "$1" "$2"; then
		rm "$2"
	else
		wGet -O "$3" "$url"
		if cmp -s "$1" "$3"; then
			rm "$2" "$3"
		elif cmp -s "$2" "$3"; then
			mv "$2" "$1"
			rm "$3"
		else
			rm "$1" "$2" "$3"
			false
		fi
	fi
}

Ck2()
{
	local url="$1"; shift
	if cmp -s "$1" "$2"; then
		ln -f "$1" "$2"
	else
		wGet -O "$3" "$url"
		if cmp -s "$1" "$3"; then
			ln -f "$1" "$2"
			rm "$3"
		elif cmp -s "$2" "$3"; then
			ln -f "$2" "$1"
			rm "$f3"
		else
			rm "$1" "$2" "$3"
			false
		fi
	fi
}

tmpdir=
hlsdirs=()
argv=("$@")

for (( i = 1; i < $#; i++ )); do
	[[ ${argv[i-1]} = -i && ${argv[i]} = http://* ]] || continue
	if [ -z "$tmpdir" ]; then
		trap 'exit 143' HUP INT QUIT PIPE TERM
		tmpdir=$(mktemp -dt "${0##*/}.XXXXXXXX")
		trap 'remove_tmpdir $?' EXIT
	fi
	url=${argv[i]}
	out=$tmpdir/hls$i
	wGet -O "$out" "$url"
	argv[i]=$out
	if [ "$(head -c7 "$out")" = '#EXTM3U' ]; then
		Ck1 "$url" "$out" "$out".{2,3}
		dir=$(sha1sum <"$out")
		dir=${TMPDIR:-/tmp}/hls-${dir:0:20}
		mkdir -pv "$dir" "$dir".{2,3}
		hlsdirs+=("$dir" "$dir".{2,3})
		pushd "$dir"
		perl -lne '
			use v5.12;
			our $base;
			BEGIN {
				$base = shift;
			}
			s/\r//g;
			if (m,^http://,) {
				say;
			}
			elsif (m,^[^#],) {
				say "$base/$_";
			}
			' "${url%/*}" <"$out" >$tmpdir/parts$i
		perl -pe 's,^http://.*/,,' "$out" >new.m3u
		wGet --continue --input-file=$tmpdir/parts$i
		argv[i]=$PWD/new.m3u
		popd
	fi
	if ffmpeg -v error -i "${argv[i]}" -f null - 2>&1 | grep '.'; then
		: need recheck
	else
		continue
	fi
	if [ "$(head -c7 "$out")" = '#EXTM3U' ]; then
		while read -r part; do
			b=${part##*/}
			f=$dir/$b
			[ -f "$f" ]
			if ffmpeg -v error -i "$f" -f null - 2>&1 |
			   grep -v -e 'element type mismatch 1' -e 'Last message repeated'; then
				: need recheck
			else
				continue
			fi </dev/null
			f2=$dir.2/$b
			f3=$dir.3/$b
			Ck1 "$part" "$f" "$f2" "$f3" </dev/null
		done <$tmpdir/parts$i
	else
		Ck1 "$url" "$out" "$out".{2,3}
	fi
done

if [ "$*" = "${argv[*]-}" ]; then
	exec ffmpeg "$@"
fi

rc=
ffmpeg "${argv[@]}" || rc=$?

[ -n "$rc" ] ||
rm -r "${hlsdirs[@]}"

exit $rc
